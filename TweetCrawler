import json
import sys
import tweepy
from tweepy import Stream
import re
from unicodedata import normalize
 
 
consumer_key = 'TN88qt9w68bOf7jD8odthgt4a'
consumer_secret = '1oaK1BgsrGVDDEhB1sRRbgXdSEphqPQ8ZDcLLwWCR18MYuG4M2'
access_token = '49425950-Gia42xuDhQnqKXakyVAxAL8svpALcoavr2upFEiIy'
access_token_secret = 'jWmjANzc6AMWyw6Xnrv5i3Tm97WZ5xaSiFtfgnZXfSINV'
 
dicc = {}
 
brand = 'Espert'
 
class TweetListener(tweepy.streaming.StreamListener):
 
 
    def on_data (self, data):
        
        all_data = json.loads(data)
        if 'text' in all_data:
            if 'extended_tweet' in all_data:
                tweet = all_data ['extended_tweet']['full_text']
                tweetText = re.sub(
        r"([^n\u0300-\u036f]|n(?!\u0303(?![\u0300-\u036f])))[\u0300-\u036f]+", r"\1", 
        normalize( "NFD", tweet), 0, re.I)
                tweetText = normalize( 'NFC', tweetText)
                dicc ['text'] = tweetText
            else:
                tweet = all_data ['text']
                tweetText = re.sub(
        r"([^n\u0300-\u036f]|n(?!\u0303(?![\u0300-\u036f])))[\u0300-\u036f]+", r"\1", 
        normalize( "NFD", tweet), 0, re.I)
                tweetText = normalize( 'NFC', tweetText)
                dicc ['text'] = tweetText
                created_at = all_data ['created_at']
                dicc ['created_at'] = created_at
                retweeted = all_data['retweeted']
                
                dicc ['retweeted'] = retweeted
                username = all_data ['user']['screen_name']
                tweetText = re.sub(
        r"([^n\u0300-\u036f]|n(?!\u0303(?![\u0300-\u036f])))[\u0300-\u036f]+", r"\1", 
        normalize( "NFD", username), 0, re.I)
                tweetText = normalize( 'NFC', tweetText)
                dicc ['username'] = tweetText
                user_tz = all_data ['user']['time_zone']
                dicc ['user_tz'] = user_tz
                user_location = all_data['user']['location']
                if user_location is None:
                    dicc ['user_location'] = user_location
                else:
                    tweetText = re.sub(
            r"([^n\u0300-\u036f]|n(?!\u0303(?![\u0300-\u036f])))[\u0300-\u036f]+", r"\1", 
            normalize( "NFD", user_location), 0, re.I)
                    tweetText = normalize( 'NFC', tweetText)
                    dicc ['user_location'] = tweetText
                user_coordinates = all_data['coordinates']
                if user_coordinates is None:
                    final_coordinates = user_coordinates
                    dicc ['user_coordinates'] = final_coordinates
                else:
                    final_coordinates = str (all_data['coordinates']['coordinates'])
                    dicc ['user_coordinates'] = final_coordinates
            #print (tweet)
            #print (dicc)
            with open('Espert.json', 'a') as f:
                json.dump(dicc,f)
                f.write('\n')
 
        
 
 
    def on_error (self,status):
        print ('Something went wrong. Status', status)
 
 
if __name__ == '__main__':
 
   
 
    auth = tweepy.OAuthHandler (consumer_key,consumer_secret)
    auth.set_access_token (access_token, access_token_secret)
    api = tweepy.API(auth)
 
    l = TweetListener()
    twitterStream = Stream(auth,l)
    if brand is None:
        twitterStream.sample()
    else:
        twitterStream.filter(track =[brand],languages = ['es'], stall_warnings = True) 
 
    
 
