#!/usr/bin/python
 
import random
import pymongo
from pymongo import MongoClient
 
client = MongoClient ('localhost',27017)
db = client.tesis
candidatos2 = db.Candidatos
 
sistema = 'Windows'
 
def getch(): 
        global sistema
        ch = ''
        if sistema == 'Linux':
                import sys, tty, termios
 
                fd = sys.stdin.fileno()
                old_settings = termios.tcgetattr(fd)
                tty.setraw(sys.stdin.fileno())
                ch = sys.stdin.read(1)
                termios.tcsetattr(fd, termios.TCSADRAIN, old_settings)
        elif sistema == 'Windows':
                ch = input()
                      
        return str(ch)
 
candidatos = ["lavagna", "fernandez", "macri", "del_cano", "espert"]
total = [1000, 1000, 1000, 1000, 1000]
etiquetados = [0, 0, 0, 0, 0]
positivos = [0, 0, 0, 0, 0]
negativos = [0, 0, 0, 0, 0]
neutros = [0, 0, 0, 0, 0]
tweets = ["Un tweet positivo", "Un tweet negativo", "Un tweet neutro"]
 
def etiquetarTweets(candidato):
        fin = False
        while (not fin):
 
                print ("\n\n\n")
                print (candidatos[candidato] + "\t total: " + str(total[candidato]) + "\t etiquetados: " + str(etiquetados[candidato]) + " (" + str(positivos[candidato]) + ", " + str(neutros[candidato]) + ", " + str(negativos[candidato]) + ")")
                print ("\n*********************************************")
                #tweet = random.randint(0, 2)
                tweet = traerTweet(candidatos[candidato])
                print (tweet['text'])
                print ("*********************************************")
                print ("\n (1) Positivo                  (2) Neutro             (3) Negativo")
                tecla = getch()
                if tecla == 'q':
                        fin = True
                else:
                        if (tecla >= '1' and tecla <= '3'):
                                etiquetados[candidato] += 1
                        if (tecla == '1'):
                                positivos[candidato] += 1
                                candidatos2.update_one({'_id':tweet['_id']},{"$set":{"sentiment":'positivo'}})
                        elif (tecla == '2'):
                                neutros[candidato] += 1
                                candidatos2.update_one({'_id':tweet['_id']},{"$set":{"sentiment":'neutro'}})
                        elif (tecla == '3'):
                                negativos[candidato] += 1
                                candidatos2.update_one({'_id':tweet['_id']},{"$set":{"sentiment":'negativo'}})
 
 
def mostrarCandidatos():
        fin = False
        while (not fin):
                print ("\n\n\n")
                i = 0
                print ("candidato" + "\t #total" + "\t #etiquetados" + "\t #positivos" + "\t #neutros" + "\t #negativos")
                for c in candidatos:
                        print ("(" + str(i+1) + ") " + c + "\t  " + str(total[i])  + "\t\t" + str(etiquetados[i]) + "\t\t" + str(positivos[i]) + "\t\t" + str(neutros[i]) + "\t\t" + str(negativos[i]))
                        i += 1
                tecla = getch()
                if tecla == 'q':
                        fin = True
                elif (tecla >= '1' and tecla <='6'):
                        candidato = int(tecla) - 1
                        etiquetarTweets(candidato)
 
def traerTweet(candidato):
        if (candidato == 'lavagna'):
                
                tweet = candidatos2.find_one({"candidato":"Lavagna","sentiment":"","date":20190825}) 
                return tweet
        elif (candidato == 'fernandez'):
                tweet = candidatos2.find_one({"candidato":"Fernandez","sentiment":"","date":20191007}) 
                return tweet
        elif (candidato == 'macri'):
                tweet = candidatos2.find_one({"candidato":"Macri","sentiment":"", "date":20191015}) 
                return tweet
        elif (candidato == 'del_cano'):
                tweet = candidatos2.find_one({"candidato":"Del_Cano","sentiment":"","date":20190831}) 
                return tweet
        elif (candidato == 'espert'):
                tweet = candidatos2.find_one({"candidato":"Espert","sentiment":"","date":20190820}) 
                return tweet
                
 
mostrarCandidatos()
 
 
